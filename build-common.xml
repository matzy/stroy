<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="build-common" default="default">
    <import file="dependencies.xml"/>

    <target name="default" depends="goal"/>

    <!-- ====== overrideable properties ========== -->

    <property name="version" value="0.0.1"/>
    <property name="creator" value="Stephan Pfab"/>
    <property name="buildnumber" value=""/>
    <property name="app.name" value=""/>
    <property name="app.main" value="${ant.project.name}"/>
    <property name="app.signature" value=""/>
    <property name="app.bundleid" value=""/>
    <property name="app.icon.osx" value=""/>
    <property name="app.helpbook" value=""/>


    <!-- ====== properties ========== -->

    <property name="classes"         value="${dependencies.basedir}/build/classes/${ant.project.name}"/>
    <property name="objc-classes"    value="${dependencies.basedir}/build/objc-classes/${ant.project.name}"/>
    <property name="libs"            value="${dependencies.basedir}/build/libs"/>
    <property name="objc-libs"       value="${dependencies.basedir}/build/objc-libs"/>
    <property name="dist"            value="${dependencies.basedir}/build/dist/${ant.project.name}"/>
    <property name="module"          value="${dependencies.basedir}/modules/${ant.project.name}"/>
    <property name="resources"       value="${dependencies.basedir}/build/resources/${ant.project.name}"/>
    <property name="deploy"          value="${dependencies.basedir}/build/deploy/${ant.project.name}"/>
    <property name="src"             value="${module}/src"/>
    <property name="helpbooksrc"     value="${module}/${app.helpbook}"/>
    <!--<property name="jar-name"        value="openCage-${ant.project.name}-${version}.jar"/>-->

    <condition property="isOSX">
        <and>
          <os family="mac"/>
          <os family="unix"/>
        </and>
      </condition>
    <condition property="isLinux">
       <and>
         <not>  <os family="mac"/> </not>
         <os family="unix"/>
       </and>
     </condition>
    <condition property="isWindows">
       <and>
         <os family="winnt"/>
       </and>
     </condition>
    <condition property="isUnix">
       <and>
         <os family="unix"/>
       </and>
    </condition>
    <condition property="isOSXApp">
        <and>
            <not> <equals arg1="${app.icon.osx}" arg2="" /> </not>
            <not> <equals arg1="${app.bundleid}" arg2="" /> </not>
        </and>
    </condition>


    <!-- ====== extra tasks ========== -->

    <!-- if-task -->
    <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
        <pathelement location="${dependencies.basedir}/external/build/ant-contrib-1.0b3.jar"/>
      </classpath>
    </taskdef>

    <!-- build osx apps -->
    <taskdef name="jarbundler"
             classpath="${dependencies.basedir}/external/build/jarbundler-2.0.0.jar"
             classname="net.sourceforge.jarbundler.JarBundler" />


    <!-- ====== targets ========== -->    

    <target name="clean">
        <delete dir="${dependencies.basedir}/build"/>
    </target>

    <target  name="prepare">
            <tstamp/>
        <mkdir dir="${classes}"/>
        <mkdir dir="${objc-classes}"/>
        <mkdir dir="${libs}"/>
        <mkdir dir="${objc-libs}"/>
        <mkdir dir="${dist}"/>
        <mkdir dir="${resources}"/>
        <mkdir dir="${deploy}"/>
        <mkdir dir="${deploy}/linux"/>
        <mkdir dir="${deploy}/unix"/>
        <mkdir dir="${deploy}/windows"/>
        <mkdir dir="${deploy}/osx"/>
    </target>


    <fileset id="internalsSet" dir="${libs}">
        <include name="*.jar"/>
    </fileset>
    <path id="jars">
        <fileset refid="internalsSet"/>
    </path>

    <!-- compile sources and copy pictures and xmsl -->
    <target name="compile" depends="prepare">
        <javac srcdir="${src}" destdir="${classes}">
            <classpath refid="jars"/>
        </javac>

        <copy todir="${classes}" flatten="no">
            <fileset dir="${src}" includes="**/*.xml"/>
            <fileset dir="${src}" includes="**/*.properties"/>
            <fileset dir="${src}" includes="**/*.png"/>
            <fileset dir="${src}" includes="**/*.txt"/>
         </copy>

        <if>
            <and>
                <isset property="objective-c-helpviewer"/>
                <isset property="isOSX"/>
            </and>
            <then>
                <!-- Create a JNI library for launching the Help Viewer -->
                    <exec executable="cc">
                        <arg line="-c"/>
                        <arg line="-I/System/Library/Frameworks/JavaVM.framework/Headers"/>
                        <arg line="-o ${objc-classes}/HelpBookJNI.o"/>
                        <arg value="${module}/objc-src/HelpBookJNI.m"/>
                    </exec>

                    <exec executable="cc">
                        <arg line="-dynamiclib"/>
                        <arg line="-framework JavaVM"/>
                        <arg line="-framework Cocoa"/>
                        <arg line="-o ${objc-libs}/libHelpBookJNI.jnilib"/>
                        <arg value="${objc-classes}/HelpBookJNI.o"/>
                    </exec>

                    <delete file="${objc-classes}/HelpBookJNI.o" quiet="true"/>
            </then>
        </if>


    </target>

    <!-- construct the manifest                                                              -->
    <!-- classpath is everything already in libs, i.e. all libs the current build depends on -->
    <!-- which is specified in dependencies.xml                                              -->
    <target name="create-manifest" depends="prepare">
        <pathconvert property="jars-var" pathsep=" " refid="jars">
            <map from="${libs}/" to=""/>
        </pathconvert>

        <!-- dbg -->
        <echo message="jars-vars = ${jars-var}" />

        <manifest file="${resources}/manifest.mf" mode="replace">
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Created-By" value="${creator}"/>
            <attribute name="Class-Path" value="${jars-var}"/>
        </manifest>
        <if>
            <isset property="isApp"/>
            <then>
                <manifest file="${resources}/manifest.mf" mode="update">
                    <attribute name="Main-Class" value="${app.main}"/>
                </manifest>
            </then>
        </if>
    </target>



    <!--      jar      -->
    <target name="create-jar" depends="compile,create-manifest">
        <echo message="${ant.project.name} - build-common.dist"/>
        <jar jarfile="${libs}/openCage-${ant.project.name}-${version}.jar"
             manifest="${resources}/manifest.mf">
            <fileset dir="${classes}" excludes="**/*test*"/>
        </jar>
    </target>


    <!-- copy help html pages together                                         -->
    <!-- based on osx help layout                                              -->
    <!-- English is required other languages are optional and will use English -->
    <target  name = "helpsetup">
        <if>
            <and>
                <isset property="isApp"/>
                <available file="${helpbooksrc}/English"/>
            </and>
        <then>
            <copy todir="${resources}/helpbook/English.lproj/HelpBook">
                <fileset dir="${helpbooksrc}/English" />
                <fileset dir="${helpbooksrc}/common" />
            </copy>
            <if>
                <available file="${helpbooksrc}/Japanese"/>
            <then>
                <copy todir="${resources}/helpbook/Japanese.lproj/HelpBook">
                    <fileset dir="${helpbooksrc}/Japanese" />
                    <fileset dir="${helpbooksrc}/common" />
                </copy>
            </then>
            <else>
                <copy todir="${resources}/helpbook/Japanese.lproj/HelpBook">
                    <fileset dir="${helpbooksrc}/English" />
                    <fileset dir="${helpbooksrc}/common" />
                </copy>
            </else>
            </if>
            <if>
                <available file="${helpbooksrc}/German"/>
            <then>
                <copy todir="${resources}/helpbook/German.lproj/HelpBook">
                    <fileset dir="${helpbooksrc}/German" />
                    <fileset dir="${helpbooksrc}/common" />
                </copy>
            </then>
            <else>
                <copy todir="${resources}/helpbook/German.lproj/HelpBook">
                    <fileset dir="${helpbooksrc}/English" />
                    <fileset dir="${helpbooksrc}/common" />
                </copy>
            </else>
            </if>
            <if>
                <available file="${helpbooksrc}/Spanish"/>
            <then>
                <copy todir="${resources}/helpbook/Spanish.lproj/HelpBook">
                    <fileset dir="${helpbooksrc}/German" />
                    <fileset dir="${helpbooksrc}/common" />
                </copy>
            </then>
            <else>
                <copy todir="${resources}/helpbook/Spanish.lproj/HelpBook">
                    <fileset dir="${helpbooksrc}/English" />
                    <fileset dir="${helpbooksrc}/common" />
                </copy>
            </else>
            </if>
        </then>
        </if>
    </target>

    <!-- build a osx app, app layout, plist, icon, help -->
    <target name="os-app" depends="dist" > <!-- ,jni"> -->
        <if >
           <and>
                <isset property="isOSX"/>
                <isset property="isApp"/>
           </and>
           <then>
           <if>
               <isset property="isOSXApp" />
               <then>

           <jarbundler dir="${deploy}/osx"
                       verbose="true"
                       name="${app.name}"
                       shortname="${app.name}"
                       stubfile="${app.name}"
                       signature="${app.signature}"
                       mainclass="${app.main}"
                       jvmversion="1.6+"
                       version="${version}"
                       infostring="${app.name}, MPL1.1"
                       build="${buildnumber}"
                       bundleid="${app.bundleid}"
                       icon="${src}/${app.icon.osx}"
                       helpbookfolder="HelpBook"
                       helpbookname="${app.name}"
                   >
               <jarfileset refid="internalsSet"/>

               <!-- Copy the HelpBook JNI library  -->
               <javafilelist dir="${objc-libs}" files="libHelpBookJNI.jnilib"/>

               <javaproperty name="apple.laf.useScreenMenuBar" value="true"/>
               <javaproperty name="com.apple.macos.useScreenMenuBar" value="true"/>

               <HelpBook locale="English">
                   <fileset dir="${resources}/helpbook/English.lproj/HelpBook" />
               </HelpBook>

               <HelpBook locale="German">
                   <fileset dir="${resources}/helpbook/German.lproj/HelpBook" />
               </HelpBook>

               <HelpBook locale="Japanese">
                   <fileset dir="${resources}/helpbook/Japanese.lproj/HelpBook" />
               </HelpBook>

            </jarbundler>

            <mkdir dir="${deploy}/osx/${app.name}" />
            <copy todir="${deploy}/osx/${app.name}" >
                <fileset dir="${deploy}/osx/" >
                    <exclude name="${app.name}"/>
                </fileset>
            </copy>
            <zip destfile="${deploy}/osx/${app.name}.app-${version}.zip" basedir="${deploy}/osx/${app.name}" />

            </then>
        </if>
           </then>
            <else>
                <echo message="not all properties set to build and osx.app"/>
            </else>
        </if>
    </target>

    <!-- build a unix deliverable   -->
    <!-- inspired by osx app layout -->
    <target name="unix-app"
            depends="dist,helpsetup">
        <if>
            <isset property="isApp"/>
        <then>
            <mkdir dir="${deploy}/unix/${app.name}/resources/java" />
            <copy todir="${deploy}/unix/${app.name}/resources/java">
                <fileset refid="internalsSet"/>
            </copy>

            <if>
                <available file="${resources}/helpbook"/>
                <then>
                    <copy todir="${deploy}/unix/${app.name}/resources">
                        <fileset dir="${resources}/helpbook" />
                    </copy>
                </then>
            </if>

            <echo  message="java -jar resources/java/openCage-${ant.project.name}-${version}.jar" file="${deploy}/unix/${app.name}/${app.name}.sh"/>
            <chmod file="${deploy}/unix/${app.name}/${app.name}.sh" perm="ugo+x" />

            <zip destfile="${deploy}/unix/${app.name}-${version}.zip" basedir="${deploy}/unix/${app.name}" /> 
        </then>
        </if>
    </target>



    <target name="dist" depends="create-jar" >
        <copy todir="${dist}">
            <fileset refid="internalsSet"/>
        </copy>
    </target>

    <target name="goal" depends="unix-app, os-app" />

    <target name="dist.dependencies">
        <antcall target="depend.${ant.project.name}"/>
    </target>
</project>