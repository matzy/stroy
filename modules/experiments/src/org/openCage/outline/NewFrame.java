package org.openCage.outline;

import org.netbeans.swing.outline.DefaultOutlineModel;
import org.netbeans.swing.outline.Outline;
import org.netbeans.swing.outline.OutlineModel;

import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.tree.TreeModel;
import java.awt.BorderLayout;
import java.io.File;


public class NewFrame extends JFrame {
    private Outline outline1;
    private JScrollPane jScrollPane1;

    public NewFrame() {

        //Initialize the ui generated by the Matisse GUI Builder, which,
        //for example, adds the JScrollPane to the JFrame ContentPane:
        initComponents();

        //Here I am assuming we are not on Windows,
        //otherwise use Utilities.isWindows() ? 1 : 0
        //from the NetBeans Utilities API:
        TreeModel treeMdl = new FileTreeModel(File.listRoots()[0]);

        //Create the Outline's model, consisting of the TreeModel and the RowModel,
        //together with two optional values: a boolen for something or other,
        //and the display name for the first column:
        OutlineModel mdl = DefaultOutlineModel.createOutlineModel(
                treeMdl, new FileRowModel(), true, "File System");

        //Initialize the Outline object:
        outline1 = new Outline();

        //By default, the root is shown, while here that isn't necessary:
        outline1.setRootVisible(false);

        //Assign the model to the Outline object:
        outline1.setModel(mdl);

        outline1.setRenderDataProvider(new RenderData());

        //Add the Outline object to the JScrollPane:
        jScrollPane1.setViewportView(outline1);

    }

    private void initComponents() {
        getContentPane().setLayout( new BorderLayout());
        jScrollPane1 = new JScrollPane();
        getContentPane().add( jScrollPane1, BorderLayout.CENTER  );
        setBounds(20,20,700,400);

    }

    public static void main(String[] args) {
        new NewFrame().setVisible( true );
    }
}