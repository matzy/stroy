package org.openCage.lang.artifact;

import org.jetbrains.annotations.NotNull;

/**
 * Created by IntelliJ IDEA.
 * User: stephan
 * Date: Apr 16, 2010
 * Time: 10:59:26 AM
 * To change this template use File | Settings | File Templates.
 */
public class PElephGen {

    private final Project project;

    public PElephGen( @NotNull Project project ) { //}, FSPath baseDir  ) {
        this.project = project;
    }

    public PElephGen( ) { //}, FSPath baseDir  ) {
        this.project = null;
    }

    public void writeDependencies() {
        
    }

    public String buildxml( Artifact arti ) {
        String ret = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" +
                "<project name=\"" + arti.gettName() + "\" default=\"default\" basedir=\".\">\n\n" +
                "   <!-- generated by openCage-artifact -->\n\n";



        ret += antProperty( "version", arti.getVersion().getOriginal()) + "\n";
        ret += antProperty( "groupId", arti.getGroupId()) + "\n";
        ret += antProperty( "el.src", "src/main/java") + "\n";

        ret += "    <import file=\"../../build-resources/build-common.xml\"/>\n" +
                "</project>";
        return ret;
    }

    private String antProperty( String key, String val ) {
        return "   <property name = \"" + key + "\"       value=\"" + val + "\" />";
    }

    public String deps() {
        String ret =
                "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n" +
                "<project name=\"dependencies\">\n" +
                "   <!-- generated by PElephants -->\n"+        
                "   <dirname property=\"dependencies.basedir\" file=\"${ant.file.dependencies}\"/>\n\n";


        for ( Artifact arti : project.getModules() ) {
            ret += writeModule(arti);
        }

        ret += "\n" +
                "   <!-- ================================================================== -->\n" +
                "   <!--     external library dependencies                                  --> \n" +
                "   <!-- ================================================================== -->    \n" +
                "\n";

        for ( Artifact arti : project.getExternals()) {
            ret += writeExternal(arti);
        }

        ret += "\n\n</project>\n";


        
        return ret;
    }

    //    <!-- ================================================================== -->
    //    <target name= "launch4j"
    //            depends="xstream">
    //        <copy todir="${dependencies.basedir}/build/libs" file="${dependencies.basedir}/external/production/launch4j.jar"/>
    //    </target>
    private String writeExternal(Artifact arti) {
        String ret = "   <!-- ================================================================== -->\n";
        ret += "   <target name=\""+ arti.gettName() +"\">\n";

        if ( arti.getCompileDependencies().size() > 0 ) {
            ret += "           depends=\"";
            for ( org.openCage.lang.count.Count<Artifact> dep : org.openCage.lang.count.Count.count(arti.getCompileDependencies()) ) {
                ret += dep.obj().gettName();
                if ( !dep.isLast()) {
                    ret += ", ";
                }
            }
            ret += "\">\n";
        }

        ret += "      <copy todir=\"${dependencies.basedir}/build/libs\" file=\"${dependencies.basedir}/repo/"+ getLibraryLocation( arti )+"\n";

        ret += "   </target>\n\n";
        return ret;
    }

    private String getLibraryLocation(Artifact arti) {
        return arti.getGroupId().replace('.', '/')  + "/" + arti.getVersion().getOriginal() + "/" + arti.gettName() + "-" + arti.getVersion().getOriginal() + ".jar" ;
    }

    //    <!-- ================================================================== -->
    //    <target name= "depend.ui"
    //            depends="depend.localization, depend.application, depend.io, designgridlayout, depend.lang, guice, javagraphics-preferencepanel, RSyntaxTextArea, jgoodies-binding">
    //        <ant dir="${dependencies.basedir}/modules/ui" target="local.goal" inheritAll="false"/>
    //    </target>
    private String writeModule(Artifact arti) {
        String ret = "   <!-- ================================================================== -->\n";
        ret += "   <target name=\""+ getModuleName(arti ) +"\"";

        if ( arti.getCompileDependencies().size() > 0 ) {
            ret += "\n           depends=\"";

            for ( org.openCage.lang.count.Count<Artifact> dep : org.openCage.lang.count.Count.count(arti.getCompileDependencies()) ) {
                ret += getModuleName( dep.obj() );
                if ( !dep.isLast()) {
                    ret += ", ";
                }
            }
            ret += "\"";
        }
        ret += ">\n";
        ret += "      <ant dir=\"${dependencies.basedir}/modules/" + arti.gettName()
            +      " target=\"local.goal\" inheritAll=\"false\"/>\n";

        ret += "   </target>\n\n";
        return ret;
    }

    private String getModuleName( Artifact arti ) {

        if ( project.isModule( arti )) {
            return "depend." + arti.gettName();
        }

        return arti.gettName();
    }
}
